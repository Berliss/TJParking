/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import BaseDeDatos.BaseDatos;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.border.*;

/**
 *
 * @author berli
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    static ArrayList<JButton> listaBotones;
    static String Usuario;
    static String numeroEstacionamiento = "";
    private static BaseDatos bsd = new BaseDatos();
    static JButton botonActual;

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal(String Usuario) {

        setLookAndFeel();
        initComponents();
        this.Usuario = Usuario;
        cargarArrayListDeBotones();
        imagenesEnBotones();
        estiloParaBotones();
        ponerNombreBotones();
        eventoInvocarPopupMenus();
        eventoParaSaberSiPuedoIngresarVehiculoEnEstacionamiento();
        this.setTitle(Usuario);
        this.setLocationRelativeTo(null);
        disponibilidadEstacionamientos();
        this.setIconImage(new ImageIcon("Imagenes/iconoSistema.png").getImage());
        bloquearModulos();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        popPupEntrada = new javax.swing.JMenuItem();
        popPupSalida = new javax.swing.JMenuItem();
        popPupEliminar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        popPupInformacion = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        btnClientes = new javax.swing.JButton();
        btnVehiculos = new javax.swing.JButton();
        btnReportes = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        etiquetaEstacionamientosNormalesDisponibles = new javax.swing.JLabel();
        etiquetaEstacionamientoPesadosDisponibles = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        btnAjustes = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnEstacionamiento1 = new javax.swing.JButton();
        btnEstacionamiento2 = new javax.swing.JButton();
        btnEstacionamiento3 = new javax.swing.JButton();
        btnEstacionamiento4 = new javax.swing.JButton();
        btnEstacionamiento5 = new javax.swing.JButton();
        btnEstacionamiento6 = new javax.swing.JButton();
        btnEstacionamiento7 = new javax.swing.JButton();
        btnEstacionamiento8 = new javax.swing.JButton();
        btnEstacionamiento9 = new javax.swing.JButton();
        btnEstacionamiento10 = new javax.swing.JButton();
        btnEstacionamiento11 = new javax.swing.JButton();
        btnEstacionamiento12 = new javax.swing.JButton();
        btnEstacionamiento13 = new javax.swing.JButton();
        btnEstacionamiento14 = new javax.swing.JButton();
        btnEstacionamiento15 = new javax.swing.JButton();
        btnEstacionamiento16 = new javax.swing.JButton();
        btnEstacionamiento17 = new javax.swing.JButton();
        btnEstacionamiento18 = new javax.swing.JButton();
        btnEstacionamiento19 = new javax.swing.JButton();
        btnEstacionamiento20 = new javax.swing.JButton();
        btnEstacionamiento21 = new javax.swing.JButton();
        btnEstacionamiento22 = new javax.swing.JButton();
        btnEstacionamiento23 = new javax.swing.JButton();
        btnEstacionamiento24 = new javax.swing.JButton();
        btnEstacionamiento25 = new javax.swing.JButton();
        btnEstacionamiento26 = new javax.swing.JButton();
        btnEstacionamiento27 = new javax.swing.JButton();
        btnEstacionamiento28 = new javax.swing.JButton();
        btnEstacionamiento29 = new javax.swing.JButton();
        btnEstacionamiento30 = new javax.swing.JButton();
        btnEstacionamiento31 = new javax.swing.JButton();
        btnEstacionamiento32 = new javax.swing.JButton();
        btnEstacionamiento33 = new javax.swing.JButton();
        btnEstacionamiento34 = new javax.swing.JButton();
        btnEstacionamiento35 = new javax.swing.JButton();
        btnEstacionamiento36 = new javax.swing.JButton();
        btnEstacionamiento37 = new javax.swing.JButton();
        btnEstacionamiento38 = new javax.swing.JButton();
        btnEstacionamiento39 = new javax.swing.JButton();
        btnEstacionamiento40 = new javax.swing.JButton();
        btnEstacionamiento41 = new javax.swing.JButton();
        btnEstacionamiento42 = new javax.swing.JButton();
        btnEstacionamiento43 = new javax.swing.JButton();
        btnEstacionamiento44 = new javax.swing.JButton();
        btnEstacionamiento45 = new javax.swing.JButton();
        btnEstacionamiento46 = new javax.swing.JButton();
        btnEstacionamiento47 = new javax.swing.JButton();
        btnEstacionamiento48 = new javax.swing.JButton();
        btnEstacionamiento49 = new javax.swing.JButton();
        btnEstacionamiento50 = new javax.swing.JButton();

        jPopupMenu1.setBackground(new java.awt.Color(0, 0, 0));
        jPopupMenu1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jPopupMenu1.setForeground(new java.awt.Color(255, 255, 255));
        jPopupMenu1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.gray, null));

        popPupEntrada.setBackground(new java.awt.Color(0, 0, 0));
        popPupEntrada.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        popPupEntrada.setForeground(new java.awt.Color(255, 255, 255));
        popPupEntrada.setText("Entrada");
        popPupEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popPupEntradaActionPerformed(evt);
            }
        });
        jPopupMenu1.add(popPupEntrada);

        popPupSalida.setBackground(new java.awt.Color(0, 0, 0));
        popPupSalida.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        popPupSalida.setForeground(new java.awt.Color(255, 255, 255));
        popPupSalida.setText("Salida");
        popPupSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popPupSalidaActionPerformed(evt);
            }
        });
        jPopupMenu1.add(popPupSalida);

        popPupEliminar.setBackground(new java.awt.Color(0, 0, 0));
        popPupEliminar.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        popPupEliminar.setForeground(new java.awt.Color(255, 255, 255));
        popPupEliminar.setText("EIiminar");
        popPupEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popPupEliminarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(popPupEliminar);
        jPopupMenu1.add(jSeparator1);

        popPupInformacion.setBackground(new java.awt.Color(0, 0, 0));
        popPupInformacion.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        popPupInformacion.setForeground(new java.awt.Color(255, 255, 255));
        popPupInformacion.setText("Informacion");
        popPupInformacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popPupInformacionActionPerformed(evt);
            }
        });
        jPopupMenu1.add(popPupInformacion);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.gray, null));

        btnClientes.setBackground(new java.awt.Color(204, 204, 204));
        btnClientes.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        btnClientes.setForeground(new java.awt.Color(255, 255, 255));
        btnClientes.setText("Clientes");
        btnClientes.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), null));
        btnClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClientesActionPerformed(evt);
            }
        });

        btnVehiculos.setBackground(new java.awt.Color(204, 204, 204));
        btnVehiculos.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        btnVehiculos.setForeground(new java.awt.Color(255, 255, 255));
        btnVehiculos.setText("Vehiculos");
        btnVehiculos.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), null));
        btnVehiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVehiculosActionPerformed(evt);
            }
        });

        btnReportes.setBackground(new java.awt.Color(204, 204, 204));
        btnReportes.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        btnReportes.setForeground(new java.awt.Color(255, 255, 255));
        btnReportes.setText("Reportes");
        btnReportes.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), null));
        btnReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportesActionPerformed(evt);
            }
        });

        btnSalir.setBackground(new java.awt.Color(204, 204, 204));
        btnSalir.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir.setText("Salir");
        btnSalir.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), null));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jLabel1.setText("Normales");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jLabel2.setText("Pesados");

        etiquetaEstacionamientosNormalesDisponibles.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        etiquetaEstacionamientosNormalesDisponibles.setText("50");

        etiquetaEstacionamientoPesadosDisponibles.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        etiquetaEstacionamientoPesadosDisponibles.setText("50");

        jLabel3.setBackground(new java.awt.Color(204, 204, 204));
        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Disponibilidad");

        btnAjustes.setBackground(new java.awt.Color(204, 204, 204));
        btnAjustes.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        btnAjustes.setForeground(new java.awt.Color(255, 255, 255));
        btnAjustes.setText("Ajustes");
        btnAjustes.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), null));
        btnAjustes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjustesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(etiquetaEstacionamientoPesadosDisponibles))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(etiquetaEstacionamientosNormalesDisponibles))
                    .addComponent(btnClientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnVehiculos, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                    .addComponent(btnReportes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAjustes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVehiculos, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReportes, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(btnAjustes, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(etiquetaEstacionamientosNormalesDisponibles))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(etiquetaEstacionamientoPesadosDisponibles))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.LINE_START);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.gray, null));
        jPanel2.setPreferredSize(new java.awt.Dimension(1162, 110));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(329, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(229, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
        );

        jLabel5.setIcon(new ImageIcon("Imagenes/logoPrincipal.png"));

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new java.awt.GridLayout(5, 10, 8, 8));

        btnEstacionamiento1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "1", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Century Gothic", 1, 16), new java.awt.Color(153, 153, 153))); // NOI18N
        btnEstacionamiento1.setContentAreaFilled(false);
        jPanel3.add(btnEstacionamiento1);
        jPanel3.add(btnEstacionamiento2);
        jPanel3.add(btnEstacionamiento3);
        jPanel3.add(btnEstacionamiento4);
        jPanel3.add(btnEstacionamiento5);
        jPanel3.add(btnEstacionamiento6);
        jPanel3.add(btnEstacionamiento7);
        jPanel3.add(btnEstacionamiento8);
        jPanel3.add(btnEstacionamiento9);
        jPanel3.add(btnEstacionamiento10);
        jPanel3.add(btnEstacionamiento11);
        jPanel3.add(btnEstacionamiento12);
        jPanel3.add(btnEstacionamiento13);
        jPanel3.add(btnEstacionamiento14);
        jPanel3.add(btnEstacionamiento15);
        jPanel3.add(btnEstacionamiento16);
        jPanel3.add(btnEstacionamiento17);
        jPanel3.add(btnEstacionamiento18);
        jPanel3.add(btnEstacionamiento19);
        jPanel3.add(btnEstacionamiento20);
        jPanel3.add(btnEstacionamiento21);
        jPanel3.add(btnEstacionamiento22);
        jPanel3.add(btnEstacionamiento23);
        jPanel3.add(btnEstacionamiento24);
        jPanel3.add(btnEstacionamiento25);
        jPanel3.add(btnEstacionamiento26);
        jPanel3.add(btnEstacionamiento27);
        jPanel3.add(btnEstacionamiento28);
        jPanel3.add(btnEstacionamiento29);
        jPanel3.add(btnEstacionamiento30);
        jPanel3.add(btnEstacionamiento31);
        jPanel3.add(btnEstacionamiento32);
        jPanel3.add(btnEstacionamiento33);
        jPanel3.add(btnEstacionamiento34);
        jPanel3.add(btnEstacionamiento35);
        jPanel3.add(btnEstacionamiento36);
        jPanel3.add(btnEstacionamiento37);
        jPanel3.add(btnEstacionamiento38);
        jPanel3.add(btnEstacionamiento39);
        jPanel3.add(btnEstacionamiento40);
        jPanel3.add(btnEstacionamiento41);
        jPanel3.add(btnEstacionamiento42);
        jPanel3.add(btnEstacionamiento43);
        jPanel3.add(btnEstacionamiento44);

        btnEstacionamiento45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstacionamiento45ActionPerformed(evt);
            }
        });
        jPanel3.add(btnEstacionamiento45);
        jPanel3.add(btnEstacionamiento46);
        jPanel3.add(btnEstacionamiento47);
        jPanel3.add(btnEstacionamiento48);
        jPanel3.add(btnEstacionamiento49);
        jPanel3.add(btnEstacionamiento50);

        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClientesActionPerformed
        VentanaClientes ventana = new VentanaClientes(this, true);
        ventana.setLocationRelativeTo(this);
        ventana.setVisible(true);
    }//GEN-LAST:event_btnClientesActionPerformed

    private void btnVehiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVehiculosActionPerformed
        VentanaVehiculos ventana = new VentanaVehiculos(this, true);
        ventana.setLocationRelativeTo(null);
        ventana.setVisible(true);
    }//GEN-LAST:event_btnVehiculosActionPerformed

    private void btnEstacionamiento45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstacionamiento45ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEstacionamiento45ActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        imagenesEnBotones();
    }//GEN-LAST:event_formComponentResized

    private void popPupEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popPupEntradaActionPerformed
        VentanaEntradaVehiculos ventana = new VentanaEntradaVehiculos(this, true);
        ventana.setLocationRelativeTo(null);
        ventana.setVisible(true);
    }//GEN-LAST:event_popPupEntradaActionPerformed

    private void popPupSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popPupSalidaActionPerformed
        if (popPupSalida.isEnabled()) {
            System.out.println(obtenerDatosDeVehiculoEstacionado());

            ArrayList<String> campos = bsd.obtenerDatosEnLineaEspecifica(obtenerDatosDeVehiculoEstacionado());

            VentanaSalidaVehiculos ventana = new VentanaSalidaVehiculos(this, true, campos.get(0), campos.get(1), campos.get(2), campos.get(3));
            ventana = new VentanaSalidaVehiculos(this, true, campos.get(0), campos.get(1), campos.get(2), campos.get(3));
            ventana.setLocationRelativeTo(null);
            ventana.setVisible(true);
        }
    }//GEN-LAST:event_popPupSalidaActionPerformed

    private void popPupEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popPupEliminarActionPerformed
        if (popPupEliminar.isEnabled()) {

            ArrayList<String> campos = bsd.obtenerDatosEnLineaEspecifica(obtenerDatosDeVehiculoEstacionado());
            eliminarDatosDeEntradas(campos);
            eventoEliminarVehiculosEstacionados();
            VentanaPrincipal.disponibilidadEstacionamientos();
        }
    }//GEN-LAST:event_popPupEliminarActionPerformed

    private void btnReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportesActionPerformed
        VentanaReportes ventana = new VentanaReportes(this, true);

        ventana = new VentanaReportes(this, true);
        ventana.setVisible(true);
    }//GEN-LAST:event_btnReportesActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void popPupInformacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popPupInformacionActionPerformed
        if (popPupInformacion.isEnabled()) {

            ArrayList<String> campos = bsd.obtenerDatosEnLineaEspecifica(obtenerDatosDeVehiculoEstacionado());

            VentanaInformacion ventana = new VentanaInformacion(this, true, campos.get(0), campos.get(1), campos.get(4), campos.get(5), campos.get(6), campos.get(3), campos.get(2));
            ventana.setLocationRelativeTo(null);
            ventana.setVisible(true);
        }
    }//GEN-LAST:event_popPupInformacionActionPerformed

    private void btnAjustesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjustesActionPerformed
        VentanaAjustes ventana = new VentanaAjustes(this, true);
        ventana.setLocationRelativeTo(this);
        ventana.setVisible(true);
    }//GEN-LAST:event_btnAjustesActionPerformed

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
                * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
             */
            UIManager.setLookAndFeel("com.jtattoo.plaf.fast.FastLookAndFeel");
            //</editor-fold>
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal(Usuario).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjustes;
    private javax.swing.JButton btnClientes;
    private javax.swing.JButton btnEstacionamiento1;
    private javax.swing.JButton btnEstacionamiento10;
    private javax.swing.JButton btnEstacionamiento11;
    private javax.swing.JButton btnEstacionamiento12;
    private javax.swing.JButton btnEstacionamiento13;
    private javax.swing.JButton btnEstacionamiento14;
    private javax.swing.JButton btnEstacionamiento15;
    private javax.swing.JButton btnEstacionamiento16;
    private javax.swing.JButton btnEstacionamiento17;
    private javax.swing.JButton btnEstacionamiento18;
    private javax.swing.JButton btnEstacionamiento19;
    private javax.swing.JButton btnEstacionamiento2;
    private javax.swing.JButton btnEstacionamiento20;
    private javax.swing.JButton btnEstacionamiento21;
    private javax.swing.JButton btnEstacionamiento22;
    private javax.swing.JButton btnEstacionamiento23;
    private javax.swing.JButton btnEstacionamiento24;
    private javax.swing.JButton btnEstacionamiento25;
    private javax.swing.JButton btnEstacionamiento26;
    private javax.swing.JButton btnEstacionamiento27;
    private javax.swing.JButton btnEstacionamiento28;
    private javax.swing.JButton btnEstacionamiento29;
    private javax.swing.JButton btnEstacionamiento3;
    private javax.swing.JButton btnEstacionamiento30;
    private javax.swing.JButton btnEstacionamiento31;
    private javax.swing.JButton btnEstacionamiento32;
    private javax.swing.JButton btnEstacionamiento33;
    private javax.swing.JButton btnEstacionamiento34;
    private javax.swing.JButton btnEstacionamiento35;
    private javax.swing.JButton btnEstacionamiento36;
    private javax.swing.JButton btnEstacionamiento37;
    private javax.swing.JButton btnEstacionamiento38;
    private javax.swing.JButton btnEstacionamiento39;
    private javax.swing.JButton btnEstacionamiento4;
    private javax.swing.JButton btnEstacionamiento40;
    private javax.swing.JButton btnEstacionamiento41;
    private javax.swing.JButton btnEstacionamiento42;
    private javax.swing.JButton btnEstacionamiento43;
    private javax.swing.JButton btnEstacionamiento44;
    private javax.swing.JButton btnEstacionamiento45;
    private javax.swing.JButton btnEstacionamiento46;
    private javax.swing.JButton btnEstacionamiento47;
    private javax.swing.JButton btnEstacionamiento48;
    private javax.swing.JButton btnEstacionamiento49;
    private javax.swing.JButton btnEstacionamiento5;
    private javax.swing.JButton btnEstacionamiento50;
    private javax.swing.JButton btnEstacionamiento6;
    private javax.swing.JButton btnEstacionamiento7;
    private javax.swing.JButton btnEstacionamiento8;
    private javax.swing.JButton btnEstacionamiento9;
    private javax.swing.JButton btnReportes;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnVehiculos;
    private static javax.swing.JLabel etiquetaEstacionamientoPesadosDisponibles;
    private static javax.swing.JLabel etiquetaEstacionamientosNormalesDisponibles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JMenuItem popPupEliminar;
    private javax.swing.JMenuItem popPupEntrada;
    private javax.swing.JMenuItem popPupInformacion;
    private javax.swing.JMenuItem popPupSalida;
    // End of variables declaration//GEN-END:variables

    public void cargarArrayListDeBotones() {
        listaBotones = new ArrayList();
        listaBotones.add(btnEstacionamiento1);
        listaBotones.add(btnEstacionamiento2);
        listaBotones.add(btnEstacionamiento3);
        listaBotones.add(btnEstacionamiento4);
        listaBotones.add(btnEstacionamiento5);
        listaBotones.add(btnEstacionamiento6);
        listaBotones.add(btnEstacionamiento7);
        listaBotones.add(btnEstacionamiento8);
        listaBotones.add(btnEstacionamiento9);
        listaBotones.add(btnEstacionamiento10);
        listaBotones.add(btnEstacionamiento11);
        listaBotones.add(btnEstacionamiento12);
        listaBotones.add(btnEstacionamiento13);
        listaBotones.add(btnEstacionamiento14);
        listaBotones.add(btnEstacionamiento15);
        listaBotones.add(btnEstacionamiento16);
        listaBotones.add(btnEstacionamiento17);
        listaBotones.add(btnEstacionamiento18);
        listaBotones.add(btnEstacionamiento19);
        listaBotones.add(btnEstacionamiento20);
        listaBotones.add(btnEstacionamiento21);
        listaBotones.add(btnEstacionamiento22);
        listaBotones.add(btnEstacionamiento23);
        listaBotones.add(btnEstacionamiento24);
        listaBotones.add(btnEstacionamiento25);
        listaBotones.add(btnEstacionamiento26);
        listaBotones.add(btnEstacionamiento27);
        listaBotones.add(btnEstacionamiento28);
        listaBotones.add(btnEstacionamiento29);
        listaBotones.add(btnEstacionamiento30);
        listaBotones.add(btnEstacionamiento31);
        listaBotones.add(btnEstacionamiento32);
        listaBotones.add(btnEstacionamiento33);
        listaBotones.add(btnEstacionamiento34);
        listaBotones.add(btnEstacionamiento35);
        listaBotones.add(btnEstacionamiento36);
        listaBotones.add(btnEstacionamiento37);
        listaBotones.add(btnEstacionamiento38);
        listaBotones.add(btnEstacionamiento39);
        listaBotones.add(btnEstacionamiento40);
        listaBotones.add(btnEstacionamiento41);
        listaBotones.add(btnEstacionamiento42);
        listaBotones.add(btnEstacionamiento43);
        listaBotones.add(btnEstacionamiento44);
        listaBotones.add(btnEstacionamiento45);
        listaBotones.add(btnEstacionamiento46);
        listaBotones.add(btnEstacionamiento47);
        listaBotones.add(btnEstacionamiento48);
        listaBotones.add(btnEstacionamiento49);
        listaBotones.add(btnEstacionamiento50);
    }

    public void estiloParaBotones() {
        for (int i = 0; i < 50; i++) {

            JButton botonActual = listaBotones.get(i);
            botonActual.setBorder(BorderFactory.createTitledBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED), "" + (i + 1), TitledBorder.CENTER, TitledBorder.BOTTOM, new Font("Century Gothic", 1, 16), new Color(153, 153, 153)));
            botonActual.setContentAreaFilled(false);

        }
    }

    private static void imagenEnElLogo() {
        ponerIconosRedimenzionables("Imagenes/iconoCarro.png", botonActual);
    }

    public static void imagenesEnBotones() {

        for (int i = 0; i < 50; i++) {

            botonActual = listaBotones.get(i);
            if (estatusDeEstacionamiento().get(i).equals("NORMAL")) {
                ponerIconosRedimenzionables("Imagenes/iconoCarro.png", botonActual);
            } else if (estatusDeEstacionamiento().get(i).equals("PESADO")) {
                ponerIconosRedimenzionables("Imagenes/iconoCamion.png", botonActual);
            } else {
                ponerIconosRedimenzionables("Imagenes/iconoParqueoVacio.png", botonActual);
            }

        }
    }

    private void ponerNombreBotones() {
        //Este metodo es necesario para poder poner numero a los "estacionamientos",ya que el metodo getName(); devuelve null
        //Si no se invoca setName(); no se que error pueda conllevar esto hasta ahora.

        for (int i = 0; i < 50; i++) {
            JButton botonActual = listaBotones.get(i);
            botonActual.setName("" + (i + 1));

        }
    }
    private static boolean invocarMenu = true;

    private void eventoInvocarPopupMenus() {

        if (invocarMenu) {
            for (int i = 0; i < 50; i++) {
                JButton botonActual = listaBotones.get(i);

                botonActual.addMouseListener(new MouseAdapter() {
                    public void mouseReleased(MouseEvent e) {
                        jPopupMenu1.show(botonActual, 0, botonActual.getHeight());
                        String nombreBoton = botonActual.getName();
                        numeroEstacionamiento = nombreBoton;//esta linea me soluciona la vida con estes id se me hace mas facil trabajar

                    }
                });
            }
            System.out.println(invocarMenu);
            invocarMenu = false;
            System.out.println(invocarMenu);
        }

    }

    private void eventoParaSaberSiPuedoIngresarVehiculoEnEstacionamiento() {

        for (int i = 0; i < 50; i++) {
            JButton botonActual = listaBotones.get(i);
            botonActual.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent e) {
                    JButton boton = (JButton) e.getSource();
                    String lineaBuscar = boton.getName() + "|*|*|*|*|*|*|*|";

                    ArrayList EstatusEstacionamiento = bsd.obtenerTodosLosDatos("bdEstacionamiento.txt");

                    if (EstatusEstacionamiento.contains(new String(lineaBuscar))) {
                        popPupEntrada.setEnabled(true);
                        popPupSalida.setEnabled(false);
                        popPupEliminar.setEnabled(false);
                        popPupInformacion.setEnabled(false);
                        System.out.println(lineaBuscar);

                    } else {

                        popPupEntrada.setEnabled(false);
                        popPupSalida.setEnabled(true);
                        popPupEliminar.setEnabled(true);
                        popPupInformacion.setEnabled(true);

                    }

                }
            });
        }
    }

    private static void ponerIconosRedimenzionables(String ruta, JButton boton) {
        ImageIcon rutaImagen = new ImageIcon(ruta);
        Image imagenObtenida = rutaImagen.getImage();

        Dimension tamanoDeBoton = boton.getSize();

        int anchoBoton = (int) (tamanoDeBoton.getWidth() * 0.60);
        int alturaBoton = (int) (tamanoDeBoton.getHeight() * 0.60);

        Image imagenRedimensionada = imagenObtenida.getScaledInstance(anchoBoton, alturaBoton, Image.SCALE_DEFAULT);
        ImageIcon iconoRedimensionado = new ImageIcon(imagenRedimensionada);

        boton.setIcon(iconoRedimensionado);
    }

    public static void setLookAndFeel() {
        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.fast.FastLookAndFeel");

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            ex.printStackTrace();
        }
    }

    public static ArrayList estatusDeEstacionamiento() {
        String bdDeseada = "bdEstacionamiento.txt";

        ArrayList<String> todosEstacionamientos = bsd.obtenerTodosLosDatos(bdDeseada);
        ArrayList<String> estacionamientoEspecifico;
        ArrayList<String> datos = new ArrayList();

        for (int i = 0; i < todosEstacionamientos.size(); i++) {
            estacionamientoEspecifico = bsd.obtenerDatosEnLineaEspecifica(todosEstacionamientos.get(i));

            for (int j = 0; j < estacionamientoEspecifico.size(); j++) {
                if (j == 6) {
                    datos.add(estacionamientoEspecifico.get(6));
                }
            }
        }
        return datos;
    }

    public static void disponibilidadEstacionamientos() {
        int contadorParaVehiculosNormales = 0;
        int contadorParaVehiculosPesados = 0;
        int estacionamientosConsecutivosVacios = 0;

        ArrayList<String> lista = bsd.obtenerTodosLosDatos("bdEstacionamiento.txt");
        for (int i = 0; i < lista.size(); i++) {
            if (lista.contains((i + 1) + "|*|*|*|*|*|*|*|")) {
                contadorParaVehiculosNormales += 1;
                estacionamientosConsecutivosVacios += 1;

                if (estacionamientosConsecutivosVacios == 2) {
                    contadorParaVehiculosPesados += 1;
                    estacionamientosConsecutivosVacios = 0;
                }
            } else {
                estacionamientosConsecutivosVacios = 0;
            }
        }

        etiquetaEstacionamientosNormalesDisponibles.setText("" + contadorParaVehiculosNormales);
        etiquetaEstacionamientoPesadosDisponibles.setText("" + contadorParaVehiculosPesados);
    }

    public static String eventoEliminarVehiculosEstacionados() {
        ArrayList<String> listaTodosEstacionamiento = bsd.obtenerTodosLosDatos("bdEstacionamiento.txt");
        ArrayList<String> listaEstacionaminetoEspecifico;

        String id = numeroEstacionamiento;
        String dueno = "*";
        String Matricula = "*";
        String tipo = "NORMAL";
        String lineaAeditar = "";
        String lineaDeLosPesado = "";

        for (int i = 0; i < listaTodosEstacionamiento.size(); i++) {

            listaEstacionaminetoEspecifico = bsd.obtenerDatosEnLineaEspecifica(listaTodosEstacionamiento.get(i));

            String idObtenido = listaEstacionaminetoEspecifico.get(0);
            String duenoObtenido = listaEstacionaminetoEspecifico.get(1);
            String placaObtenida = listaEstacionaminetoEspecifico.get(2);
            String marcaObtenida = listaEstacionaminetoEspecifico.get(3);
            String modeloObtenida = listaEstacionaminetoEspecifico.get(4);
            String colorObtenida = listaEstacionaminetoEspecifico.get(5);
            String tipoObtenida = listaEstacionaminetoEspecifico.get(6);
            String fechaObtenida = listaEstacionaminetoEspecifico.get(7);

            lineaAeditar = idObtenido + "|" + duenoObtenido + "|" + placaObtenida + "|" + marcaObtenida + "|" + modeloObtenida + "|" + colorObtenida + "|" + tipoObtenida + "|" + fechaObtenida + "|";
            lineaDeLosPesado = duenoObtenido + "|" + placaObtenida + "|" + marcaObtenida + "|" + modeloObtenida + "|" + colorObtenida + "|" + tipoObtenida + "|" + fechaObtenida + "|";
            System.out.println(lineaAeditar);
            if (id.equals(idObtenido) && (!dueno.equals(duenoObtenido)) && tipo.contains(tipoObtenida)) {
                String lineaNueva = id + "|*|*|*|*|*|*|*|";
                bsd.editarArchivo("bdEstacionamiento.txt", lineaAeditar, lineaNueva);
                imagenesEnBotones();
                break;

            }
            if (id.equals(idObtenido) && (!dueno.equals(duenoObtenido)) && !tipo.contains(tipoObtenida)) {
                System.out.println("toy metido");
                eliminarVehiculosPesados(lineaDeLosPesado);
                imagenesEnBotones();
                break;

            }///
        }
        return lineaDeLosPesado;
    }

    /*  private void accionPopPupEliminar(){
        
        ArrayList<String> listaTodosLosEstacionamientos = bsd.obtenerTodosLosDatos("bdClientes.txt");
        ArrayList<String> listaEstacionamientoEspecifico;
        ArrayList<String> lista = bsd.obtenerDatosEnLineaEspecifica(lineaActual);

        String cedula = lista.get(1);

        for (int i = 0; i < listaTodosLosEstacionamientos.size(); i++) {

            listaEstacionamientoEspecifico = baseDatos.obtenerDatosEnLineaEspecifica(listaTodosLosEstacionamientos.get(i));
            
            
            String cedulaObtenida = listaEstacionamientoEspecifico.get(1);

            if (cedula.equals(cedulaObtenida)) {
                etiquetaDeError.setText("DOS CLIENTES NO PUEDEN TENER LA MISMA CEDULA");
                //return true;
            }
        }
        //return false;
    }*/
    private static void eliminarVehiculosPesados(String lineaCambiar) {

        ArrayList<String> listaTodosLosEstacionamiento = bsd.obtenerTodosLosDatos("bdEstacionamiento.txt");
        ArrayList<String> listaEstacionaminetoEspecifico;

        for (int i = 0; i < listaTodosLosEstacionamiento.size(); i++) {

            listaEstacionaminetoEspecifico = bsd.obtenerDatosEnLineaEspecifica(listaTodosLosEstacionamiento.get(i));

            String id0 = listaEstacionaminetoEspecifico.get(0);
            String duenoO = listaEstacionaminetoEspecifico.get(1);
            String placaO = listaEstacionaminetoEspecifico.get(2);
            String marcaO = listaEstacionaminetoEspecifico.get(3);
            String modeloO = listaEstacionaminetoEspecifico.get(4);
            String colorO = listaEstacionaminetoEspecifico.get(5);
            String tipoO = listaEstacionaminetoEspecifico.get(6);
            String fechaO = listaEstacionaminetoEspecifico.get(7);

            String lineaAcomparar = id0 + "|" + duenoO + "|" + placaO + "|" + marcaO + "|" + modeloO + "|" + colorO + "|" + tipoO + "|" + fechaO + "|";

            System.out.println(lineaAcomparar);
            if (lineaAcomparar.contains(lineaCambiar)) {
                String lineaAinsertar = id0 + "|*|*|*|*|*|*|*|";
                bsd.editarArchivo("bdEstacionamiento.txt", lineaAcomparar, lineaAinsertar);
            }
        }

    }

    public String obtenerDatosDeVehiculoEstacionado() {
        ArrayList<String> listaTodosEstacionamiento = bsd.obtenerTodosLosDatos("bdEstacionamiento.txt");
        ArrayList<String> listaEstacionaminetoEspecifico;
        String lineaAeditar = "";

        for (int i = 0; i < listaTodosEstacionamiento.size(); i++) {

            listaEstacionaminetoEspecifico = bsd.obtenerDatosEnLineaEspecifica(listaTodosEstacionamiento.get(i));

            String idObtenido = listaEstacionaminetoEspecifico.get(0);
            String duenoObtenido = listaEstacionaminetoEspecifico.get(1);
            String placaObtenida = listaEstacionaminetoEspecifico.get(2);
            String marcaObtenida = listaEstacionaminetoEspecifico.get(3);
            String modeloObtenida = listaEstacionaminetoEspecifico.get(4);
            String colorObtenida = listaEstacionaminetoEspecifico.get(5);
            String tipoObtenida = listaEstacionaminetoEspecifico.get(6);
            String fechaObtenida = listaEstacionaminetoEspecifico.get(7);

            lineaAeditar = duenoObtenido + "|" + placaObtenida + "|" + fechaObtenida + "|" + tipoObtenida + "|" + marcaObtenida + "|" + modeloObtenida + "|" + colorObtenida + "|";
            //lineaDeLosPesado = duenoObtenido+"|"+placaObtenida+"|"+marcaObtenida+"|"+modeloObtenida+"|"+colorObtenida+"|"+tipoObtenida+"|"+fechaObtenida+"|";
            System.out.println(lineaAeditar);
            if (idObtenido.equals(VentanaPrincipal.numeroEstacionamiento)) {
                break;
            }

        }
        return lineaAeditar;
    }

    private void eliminarDatosDeEntradas(ArrayList<String> campos2) throws NumberFormatException {

        String linea = numeroEstacionamiento + "|" + campos2.get(0) + "|" + campos2.get(1) + "|" + campos2.get(4) + "|" + campos2.get(5) + "|" + campos2.get(6) + "|" + campos2.get(3) + "|" + campos2.get(2) + "|";
        String lineaAntes = (Integer.parseInt(numeroEstacionamiento) - 1) + "|" + campos2.get(0) + "|" + campos2.get(1) + "|" + campos2.get(4) + "|" + campos2.get(5) + "|" + campos2.get(6) + "|" + campos2.get(3) + "|" + campos2.get(2) + "|";
        String lineaDespues = (Integer.parseInt(numeroEstacionamiento) + 1) + "|" + campos2.get(0) + "|" + campos2.get(1) + "|" + campos2.get(4) + "|" + campos2.get(5) + "|" + campos2.get(6) + "|" + campos2.get(3) + "|" + campos2.get(2) + "|";

        bsd.eliminarLineaDeArchivo("bdEntradas.txt", linea);
        bsd.eliminarLineaDeArchivo("bdEntradas.txt", lineaAntes);
        bsd.eliminarLineaDeArchivo("bdEntradas.txt", lineaDespues);

        //aqui esta escrito 3 veces tomando el cuenta de si la entrada a eliminaar es de un vehiculo pesado. de ser asi debe de
        //mirar atras,adelante y en la misma posicion para borrar.
    }

    private void bloquearModulos() {
        if (this.getTitle().contains("Facturador")) {
            btnAjustes.setEnabled(false);
        }
    }
}
